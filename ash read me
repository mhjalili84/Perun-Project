Chest X-Ray Classification using CNN (Frontal vs Lateral)
This project implements a Convolutional Neural Network (CNN) to classify chest X-ray images into Frontal and Lateral views. It uses a custom PyTorch model trained on grayscale images resized to 224√ó224.

üìÅ Features
CNN architecture with 4 convolutional layers and dropout regularization

Trained using BCEWithLogitsLoss for binary classification

Includes training, validation, and test splits with data augmentation

Implements learning rate scheduling (ReduceLROnPlateau)

Early stopping based on validation loss

Performance metrics: accuracy, precision, recall, F1-score, AUC

Confusion matrix for evaluation

Ready for Grad-CAM integration

Option to save the entire model (.pt) in Google Drive

üß† Model Summary
Input: Grayscale or RGB image of size 224√ó224

Output: Binary label ‚Äî Frontal (0) or Lateral (1)

Layers:

4√ó Conv2D + ReLU + MaxPool

2√ó Fully Connected + Dropout

Final Sigmoid layer for probability output

üöÄ Training
Optimizer: Adam (lr=1e-4, weight_decay=1e-5)

Scheduler: ReduceLROnPlateau

Regularization: Dropout (p=0.3)

Early stopping to prevent overfitting

‚úÖ Results (Example)
yaml
Copy
Edit
Epoch 5/5 | Train Loss: 0.0127, Acc: 0.9954 | Val Loss: 0.0127, Acc: 0.9974

Precision: 1.00 | Recall: 0.99 | F1-score: 1.00 | AUC: 1.00
üì¶ Files
train_model(): Training loop with logging

ChestXRayClassifier: CNN architecture

create_data_loaders(): Handles dataset split and augmentation

evaluate_model(): Computes performance metrics and plots

predict_single_image(): For real-time prediction 


